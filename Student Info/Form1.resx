<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>